require('dotenv').config();
const { Telegraf, Scenes, session } = require('telegraf');
const LocalSession = require('telegraf-session-local');
const { log, loadJSON, saveJSON } = require('./helpers');
const { getAllOlxListings } = require('./olxParser');
const { SUBSCRIBERS_FILE, PROCESSED_ADS_FILE, USER_SETTINGS_FILE, SESSION_FILE, DEFAULT_USER_SETTINGS } = require('./config');
const { filterWizard, formatSettings } = require('./scenes');

log('info', '–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ–π Telegraf (–ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è Wizard Scenes)
bot.use(new LocalSession({ database: SESSION_FILE }).middleware());

const stage = new Scenes.Stage([filterWizard]);
bot.use(stage.middleware());


let subscribers = loadJSON(SUBSCRIBERS_FILE, []);
let processedAds = new Set(loadJSON(PROCESSED_ADS_FILE, []));
let userSettings = loadJSON(USER_SETTINGS_FILE, {});

// --- –§—É–Ω–∫—Ü—ñ—è –∑–∞—Ç—Ä–∏–º–∫–∏ ---
const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

// --- –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ---
function saveUserSettings() {
  saveJSON(USER_SETTINGS_FILE, userSettings);
}

// --- –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –æ–≥–æ–ª–æ—à–µ–Ω—å ---
async function sendListings() {
  log('info', '–ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å...');

  if (subscribers.length === 0) {
    log('warn', '–ù–µ–º–∞—î –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.');
    return;
  }

  const currentProcessedAdsSize = processedAds.size;
  const subscribersToRemove = [];

  for (const userId of subscribers) {
    const settings = userSettings[userId] || DEFAULT_USER_SETTINGS;

    log('debug', `–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–≥–æ–ª–æ—à–µ–Ω—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId} –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏:`, settings);
    const newAdsForUser = await getAllOlxListings(settings, processedAds);

    if (newAdsForUser.length === 0) {
      log('debug', `–ù–µ–º–∞—î –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId} –∑–∞ –π–æ–≥–æ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏.`);
      continue;
    }

    log('info', `–ó–Ω–∞–π–¥–µ–Ω–æ ${newAdsForUser.length} –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId}`);

    for (const ad of newAdsForUser) {
      if (processedAds.has(ad.id)) {
          continue;
      }
      try {
        const safeTitle = ad.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏';

        await bot.telegram.sendMessage(
          userId,
          `üè° *${safeTitle}*\nüìç *${ad.city}, ${ad.district}*\nüí∞ ${ad.price}\nüîó [–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ](${ad.link})`,
          { parse_mode: 'Markdown' }
        );
        log('info', `–ù–∞–¥—ñ—Å–ª–∞–Ω–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è "${safeTitle.substring(0, Math.min(safeTitle.length, 30))}..." –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${userId}`);
        processedAds.add(ad.id);
        await delay(1000); // –ó–∞—Ç—Ä–∏–º–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏
      } catch (error) {
        const safeTitleForError = ad.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏';
        log('error', `–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${safeTitleForError.substring(0, Math.min(safeTitleForError.length, 30))}..." –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${userId}: ${error.message}`);

        if (error.response && error.response.error_code === 403) {
          log('warn', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userId} –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞. –î–æ–¥–∞—î–º–æ –¥–æ —Å–ø–∏—Å–∫—É –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è.`);
          subscribersToRemove.push(userId);
          break; // –ü—Ä–∏–ø–∏–Ω—è—î–º–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —â–æ–± –Ω–µ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏
        }
        if (error.code === 429 && error.parameters && error.parameters.retry_after) {
          const retryAfter = error.parameters.retry_after;
          log('warn', `Telegram: –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –ß–µ–∫–∞—î–º–æ ${retryAfter} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è–º –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è.`);
          await delay(retryAfter * 1000 + 500);
        }
      }
    }
  }

  // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ü–∏–∫–ª—É
  if (subscribersToRemove.length > 0) {
    subscribers = subscribers.filter(id => !subscribersToRemove.includes(id));
    subscribersToRemove.forEach(userId => delete userSettings[userId]);
    saveJSON(SUBSCRIBERS_FILE, subscribers);
    saveUserSettings();
    log('info', `–í–∏–¥–∞–ª–µ–Ω–æ ${subscribersToRemove.length} –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤.`);
  }

  if (processedAds.size > currentProcessedAdsSize) {
      saveJSON(PROCESSED_ADS_FILE, [...processedAds]);
      log('info', `–ó–±–µ—Ä–µ–∂–µ–Ω–æ –Ω–æ–≤—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è. –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö: ${processedAds.size}`);
  } else {
      log('info', '–ù–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ –ø—ñ–¥ —á–∞—Å —Ü—ñ—î—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.');
  }

  log('info', '–ü–µ—Ä–µ–≤—ñ—Ä–∫—É –æ–≥–æ–ª–æ—à–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
}


// --- –ö–æ–º–∞–Ω–¥–∏ ---

bot.telegram.setMyCommands([
  { command: 'start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ —Ç–∞ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è' },
  { command: 'filter', description: '–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –ø–æ—à—É–∫—É (—ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ)' },
  { command: 'settings', description: '–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è' },
  { command: 'check', description: '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞—Ä–∞–∑' },
  { command: 'stop', description: '–í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ –æ–Ω–æ–≤–ª–µ–Ω—å' },
  { command: 'help', description: '–û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É' },
]);

// *** –î–û–î–ê–ù–û: –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π my_chat_member –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ***
bot.on('my_chat_member', async (ctx) => {
  const userId = ctx.chat.id;
  const oldStatus = ctx.myChatMember.old_chat_member.status;
  const newStatus = ctx.myChatMember.new_chat_member.status;

  if (oldStatus === 'member' && newStatus === 'kicked') {
    // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞
    log('info', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userId} –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞.`);
    if (subscribers.includes(userId)) {
        subscribers = subscribers.filter(id => id !== userId);
        delete userSettings[userId];
        await saveJSON(SUBSCRIBERS_FILE, subscribers); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ await, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏
        await saveUserSettings(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ await, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏
        log('info', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑—ñ —Å–ø–∏—Å–∫—É –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ —á–µ—Ä–µ–∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è.`);
    }
  } else if (oldStatus === 'kicked' && newStatus === 'member') {
    // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞ (–∞–±–æ –¥–æ–¥–∞–≤ –π–æ–≥–æ, —è–∫—â–æ —Ä–∞–Ω—ñ—à–µ –±–ª–æ–∫—É–≤–∞–≤)
    log('info', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userId} —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–≤/–¥–æ–¥–∞–≤ –±–æ—Ç–∞. –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π—Ç–µ –π–æ–º—É /start.`);
    // –¢—É—Ç –º–æ–∂–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ /start –∞–±–æ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –π–æ–º—É —Ü–µ
    // –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π /start, –º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ bot.handleUpdate(ctx.update) –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
    // –ê–ª–µ –∫—Ä–∞—â–µ, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —è–≤–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ /start.
  }
});


bot.start((ctx) => {
  const userId = ctx.message.chat.id;
  const username = ctx.message.chat.username || '–Ω–µ–≤—ñ–¥–æ–º–æ';
  log('info', `/start –≤—ñ–¥ ${userId} (@${username})`);

  if (!subscribers.includes(userId)) {
    subscribers.push(userId);
    saveJSON(SUBSCRIBERS_FILE, subscribers);

    userSettings[userId] = { ...DEFAULT_USER_SETTINGS };
    saveUserSettings();

    ctx.reply(
      'üéâ –í—ñ—Ç–∞—î–º–æ! –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–≤–∞—Ä—Ç–∏—Ä üè†. ' +
      '–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —à—É–∫–∞—î–º–æ: –ö–∏—ó–≤, –±—É–¥—å-—è–∫–∏–π —Ä–∞–π–æ–Ω.\n\n' +
      `‚öôÔ∏è –í–∞—à—ñ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:\n${formatSettings(userSettings[userId])}\n\n` +
      '–í–∏ –º–æ–∂–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —ó—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /filter.'
    );
  } else {
    log('debug', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userId} –≤–∂–µ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π`);
    ctx.reply(
      '‚ÑπÔ∏è –í–∏ –≤–∂–µ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è üì®.\n\n' +
      '‚öôÔ∏è –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ –∑ –º–µ–Ω—é –±–æ—Ç–∞ (–Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "/" –∞–±–æ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é).'
    );
  }
});

bot.command('stop', (ctx) => {
  const userId = ctx.message.chat.id;
  log('info', `/stop –≤—ñ–¥ ${userId}`);

  if (subscribers.includes(userId)) {
    subscribers = subscribers.filter(id => id !== userId);
    saveJSON(SUBSCRIBERS_FILE, subscribers);

    delete userSettings[userId];
    saveUserSettings();

    ctx.reply('‚ùå –í–∏ –≤—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –≤—ñ–¥ –æ–Ω–æ–≤–ª–µ–Ω—å. –Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å /start üì©');
    log('info', `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userId} –≤—ñ–¥–ø–∏—Å–∞–≤—Å—è`);
  } else {
    ctx.reply('‚ÑπÔ∏è –í–∏ –Ω–µ –±—É–ª–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.');
  }
});

bot.command('settings', (ctx) => {
  const userId = ctx.message.chat.id;
  log('info', `/settings –≤—ñ–¥ ${userId}`);
  const settings = userSettings[userId];

  if (settings) {
    ctx.reply(`üìä *–í–∞—à—ñ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É:*\n${formatSettings(settings)}`, { parse_mode: 'Markdown' });
  } else {
    ctx.reply('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—á–Ω—ñ—Ç—å –∑ /start.');
  }
});

// –ù–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–µ–≥–∞–π–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
bot.command('check', async (ctx) => {
  const userId = ctx.message.chat.id;
  log('info', `/check –≤—ñ–¥ ${userId}`);
  await ctx.reply('üïµÔ∏è‚Äç‚ôÄÔ∏è –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –∑–∞ –≤–∞—à–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏. –ó–∞—á–µ–∫–∞–π—Ç–µ...');
  const settings = userSettings[userId] || DEFAULT_USER_SETTINGS;

  const newAdsForUser = await getAllOlxListings(settings, processedAds);

  if (newAdsForUser.length === 0) {
    await ctx.reply('ü§∑‚Äç‚ôÄÔ∏è –ó–∞ –≤–∞—à–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏ –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.');
  } else {
    log('info', `–ó–Ω–∞–π–¥–µ–Ω–æ ${newAdsForUser.length} –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å –¥–ª—è –Ω–µ–≥–∞–π–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${userId}`);
    let sentCount = 0;
    for (const ad of newAdsForUser) {
        if (processedAds.has(ad.id)) continue;

        try {
            const safeTitle = ad.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏';

            await bot.telegram.sendMessage(
                userId,
                `üè° *${safeTitle}*\nüìç *${ad.city}, ${ad.district}*\nüí∞ ${ad.price}\nüîó [–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ](${ad.link})`,
                { parse_mode: 'Markdown' }
            );
            processedAds.add(ad.id);
            sentCount++;
            await delay(1000); // –ó–∞—Ç—Ä–∏–º–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏
        } catch (error) {
            const safeTitleForError = ad.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏';
            log('error', `–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –ø—ñ–¥ —á–∞—Å /check "${safeTitleForError.substring(0, Math.min(safeTitleForError.length, 30))}..." –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${userId}: ${error.message}`);
            if (error.code === 429 && error.parameters && error.parameters.retry_after) {
              const retryAfter = error.parameters.retry_after;
              log('warn', `Telegram: –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤ –ø—ñ–¥ —á–∞—Å /check. –ß–µ–∫–∞—î–º–æ ${retryAfter} —Å–µ–∫—É–Ω–¥.`);
              await delay(retryAfter * 1000 + 500);
            }
        }
    }
    saveJSON(PROCESSED_ADS_FILE, [...processedAds]);
    await ctx.reply(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ ${sentCount} –Ω–æ–≤–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å.`);
  }
});


// –ó–º—ñ–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É /filter –¥–ª—è –∑–∞–ø—É—Å–∫—É Wizard Scene
bot.command('filter', async (ctx) => {
  const userId = ctx.message.chat.id;
  log('info', `/filter –≤—ñ–¥ ${userId} - –ó–∞–ø—É—Å–∫ Wizard Scene.`);
  ctx.scene.enter('filter-wizard', {
    userSettings: userSettings[userId] || DEFAULT_USER_SETTINGS,
    saveSettings: (updatedSettings) => {
      userSettings[userId] = updatedSettings;
      saveUserSettings();
      log('info', `–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId} –æ–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Wizard.`);
    },
  });
});

bot.command('help', (ctx) => {
  log('info', `/help –≤—ñ–¥ ${ctx.message.chat.id}`);
  ctx.reply(`–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:
  /start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ —Ç–∞ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
  /filter - –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó –ø–æ—à—É–∫—É –æ–≥–æ–ª–æ—à–µ–Ω—å (—ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–æ–∫).
  /settings - –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–∞—à—ñ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É.
  /check - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–æ–≤—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞ –≤–∞—à–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑.
  /stop - –í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å.
  /help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);
});

// –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–∫—Ä—ñ–º —Ç–∏—Ö, —â–æ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è —è–∫ —Ñ—ñ–ª—å—Ç—Ä–∏)
bot.on('message', (ctx) => {
  const userId = ctx.message.chat.id;
  const username = ctx.message.chat.username || '–Ω–µ–≤—ñ–¥–æ–º–æ';
  const text = ctx.message.text || '';
  if (!ctx.callbackQuery && (!ctx.scene.current || ctx.scene.current.id !== 'filter-wizard')) {
      log('debug', `–í—ñ–¥ ${userId} (@${username}): "${text.substring(0, Math.min(text.length, 50))}..."`);
  }
});


// –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–≥–æ–ª–æ—à–µ–Ω—å –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
setInterval(() => {
  sendListings().catch(err => log('error', `–ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ sendListings: ${err.message}`));
}, 300000); // 5 —Ö–≤–∏–ª–∏–Ω

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()
  .then(() => {
    log('info', '–ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ! –û—á—ñ–∫—É—î–º–æ –∫–æ–º–∞–Ω–¥...');
    // –í–∏–∫–æ–Ω–∞—Ç–∏ –ø–µ—Ä—à—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É
    sendListings().catch(err => log('error', `–ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É sendListings: ${err.message}`));
  })
  .catch(err => log('error', `–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: ${err.message}`)); // –¶–µ–π catch –º–∞—î –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –∑–∞–ø—É—Å–∫—É Telegraf

// –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞ –Ω–∞ —Å–∏–≥–Ω–∞–ª–∏
process.once('SIGINT', () => {
  bot.stop('SIGINT');
  log('info', '–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∑–∞ SIGINT.');
});
process.once('SIGTERM', () => {
  bot.stop('SIGTERM');
  log('info', '–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∑–∞ SIGTERM.');
});